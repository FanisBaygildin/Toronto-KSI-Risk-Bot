# -*- coding: utf-8 -*-
"""WeatherAPI.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zIs1ha0zaHZ88X8wqSwCsrRwbUJsXfY4
"""

import pandas as pd
import numpy as np

# for date/time
from datetime import datetime, timezone, timedelta
import datetime as dt

import pytz
# meteodata
from astral.sun import sun
from astral import LocationInfo
import requests

# for geohash
import pygeohash as pgh

import json
import os


def build_weather_row():
    API_KEY = os.getenv("WEATHER_KEY")
    if not API_KEY:
        raise RuntimeError("WEATHER_KEY not set")

    LOCATION = "Toronto"

    tz = pytz.timezone("America/Toronto")
    now = dt.datetime.now(tz).replace(minute=0, second=0, microsecond=0)
    today = now.date()

    # На всякий случай берём и вчера, если текущий час — 00:00
    dates_needed = {today}
    if now.hour == 0:
        dates_needed.add(today - dt.timedelta(days=1))

    records = []

    for date_ in dates_needed:
        url = (
            "https://api.weatherapi.com/v1/history.json"
            f"?key={API_KEY}&q={LOCATION}&dt={date_:%Y-%m-%d}&aqi=no&alerts=no"
        )
        resp = requests.get(url, timeout=30)
        resp.raise_for_status()
        data = resp.json()

        for hour in data["forecast"]["forecastday"][0]["hour"]:
            ts = dt.datetime.fromtimestamp(hour["time_epoch"], tz)
            if ts == now:
                records.append(hour)

    full_current_weather = pd.json_normalize(records)

    full_current_weather = full_current_weather[['time', 'temp_c', 'dewpoint_c', 'humidity', 'wind_kph', 'vis_km', 'pressure_mb']]

    # Преобразуем колонку DATE в datetime, если это ещё не сделано
    full_current_weather['time'] = pd.to_datetime(full_current_weather['time'])

    # Извлекаем месяц и день
    full_current_weather['Month'] = full_current_weather['time'].dt.month
    full_current_weather['Day'] = full_current_weather['time'].dt.day
    full_current_weather['Hour'] = full_current_weather['time'].dt.hour

    full_current_weather.drop('time', axis=1, inplace=True)

    # Загрузка порядка колонок из JSON
    with open("columns.json", "r") as f:
        desired_columns = json.load(f)

    # Приводим DataFrame к нужному порядку
    full_current_weather = full_current_weather[desired_columns]

    return full_current_weather.iloc[0]



# Test
if __name__ == "__main__":
    print(build_weather_row().head())
